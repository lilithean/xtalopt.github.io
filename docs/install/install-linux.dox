namespace XtalOpt {
/**

@page install-linux Installation for Linux

We encourage users to download and use XtalOpt pre-compiled from <a href="https://xtalopt.github.io/download.html">here</a>. However, you may continue reading if you wish to compile XtalOpt on your own.

@section depend Dependencies

First and foremost, a C++ compiler with C++11 is required to compile XtalOpt. GCC >= 4.8.4 and Clang >= 3.5 will both work.

The following dependencies can be installed from the package manager of most linux distributions:

  - \c git, any version
  - \c cmake (and optionally the ncurses GUI, ccmake) >= 3.0
  - \c Qt >= 5.2.1
  - \c Qwt >= 6.1.3 (compiled with Qt5)
  - \c Eigen >= 3

If you wish to enable SSH (default), you will also need:

  - <tt>openssh</tt>, any version
  - <tt>libssh</tt>, any version

Using the package manager for your linux distribution, install the dependencies listed above. For example, on Arch Linux, one can use the command

\code
pacman -S git cmake glu qt5-base qwt eigen libssh openssh
\endcode

On Ubuntu 16.04, one can use the command

\code
sudo apt-get install git cmake qt5-default libqwt-qt5-dev libeigen3-dev libssh-dev
\endcode

Note: if you are using Ubuntu 14.04, libqwt-qt5-dev may not be available. Installing Qwt that depends on Qt4 will not work. Therefore, you can either use the .deb file I have created <a href="https://github.com/psavery/qwt/releases/download/6.1.3-2.deb/qwt_6.1.3-2.deb">here</a>, or you can compile it yourself.

@section xo XtalOpt

Once the dependencies are installed, installing XtalOpt is simple. First, change to your source directory:

\code
cd $HOME/src
\endcode

Check out the master branch of the XtalOpt sources:

\code
git clone git://github.com/xtalopt/XtalOpt.git xtalopt
\endcode

Make a build directory and enter it:

\code
mkdir xtalopt/build
cd xtalopt/build
\endcode

Configure, build, and install (set the CMAKE_INSTALL_PREFIX to wherever you'd like):
\code
cmake .. -DCMAKE_INSTALL_PREFIX=<wherever>
make -j3
make install
\endcode

Note: if you need to use Kerberos authentication to establish a SSH connection to the remote server, the <tt>libssh</tt> library used by XtalOpt will not work. There is a workaround for Linux (and possibly Mac) users, which will call the command line <tt>ssh</tt>/<tt>scp</tt> commands to communicate with the remote cluster. This can be enabled by adding <tt>-DUSE_CLI_SSH=true</tt> to the cmake command above. This <tt>ssh</tt> backend will not prompt for a password, and expects the <tt>ssh</tt> commands to "just work". Passwordless <tt>ssh</tt> logins can be enabled using the <a href="http://linux.die.net/man/1/ssh-copy-id">ssh-copy-id</a> command.

XtalOpt is now installed.

@section test Test the installation

Try running the resulting XtalOpt executable (either in the bin directory of your install directory or in the build directory). If a window opens and you are able to select options, then XtalOpt was successfully installed.

*/

}
