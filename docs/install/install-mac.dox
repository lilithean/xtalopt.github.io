namespace XtalOpt {
/**

@page install-mac Installation for Mac OS X

We encourage users to download and use XtalOpt pre-compiled from <a href="https://xtalopt.github.io/download.html">here</a>. However, you may continue reading if you wish to compile XtalOpt on your own.

@section depend Dependencies

First, and foremost, Mac OS X users must install <a href="https://developer.apple.com/xcode/">Xcode</a> to begin compiling the following programs. Xcode 8 or later is required because Apple did not start including some of the C++11 features that XtalOpt uses until then.

The following dependencies can be installed from the package manager <a href="https://www.macports.org">MacPorts</a> or <a href="http://brew.sh/">Homebrew</a>:

  - \c git, any version
  - \c cmake (and optionally the ncurses GUI, ccmake) >= 3.0
  - \c Qt >= 5.2.1
  - \c Qwt >= 6.1.3 (compiled with Qt5)
  - \c Eigen >= 3

If you wish to enable SSH (default), you will also need:

  - <tt>openssh</tt>, any version
  - <tt>libssh</tt>, any version

Using the package manager for your mac distribution, install the dependencies listed above. For example, using MacPorts,

\code
port install git cmake qt5-mac qwt61 eigen libssh
\endcode

or using Homebrew,

\code
brew install git cmake qt5 qwt eigen libssh
\endcode

@section xo XtalOpt

\code
cd $HOME/src
\endcode

Check out the master branch of the XtalOpt sources:

\code
git clone git://github.com/dlonie/XtalOpt.git xtalopt
\endcode

Make a build directory and enter it:

\code
mkdir xtalopt/build
cd xtalopt/build
\endcode

For Homebrew and at the time of writing this, Qt5 and Qwt headers are not included in the $PATH, and cmake will not find them. So we must show cmake where they are. Thus, we need to add the next few lines of code before running cmake. Set
the CMAKE_INSTALL_PREFIX to wherever you'd like:

\code
export CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_PREFIX_PATH=/usr/local/opt/qt/"
      export CMAKE_FLAGS="$CMAKE_FLAGS -DQWT_INCLUDE_DIR=/usr/local/opt/qwt/lib/qwt.framework/Headers"
      export CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_INSTALL_PREFIX=<wherever>"
\endcode
Configure, build, and install:

\code
cmake ${CMAKE_FLAGS} ..
make -j3
sudo make install
\endcode

Note: if you need to use Kerberos authentication to establish a SSH connection to the remote server, the <tt>libssh</tt> library used by XtalOpt will not work. There is a workaround for Linux (and possibly Mac) users, which will call the command line <tt>ssh</tt>/<tt>scp</tt> commands to communicate with the remote cluster. This can be enabled by adding <tt>-DUSE_CLI_SSH=true</tt> to the cmake command above. This <tt>ssh</tt> backend will not prompt for a password, and expects the <tt>ssh</tt> commands to "just work". Passwordless <tt>ssh</tt> logins can be enabled using the <a href="http://linux.die.net/man/1/ssh-copy-id">ssh-copy-id</a> command.

XtalOpt is now installed.

@section test Test the installation

An xtalopt.app directory will be created wherever your cmake install prefix pointed to. You can test the program by opening this .app file. If it opens successfully and the dialog box appears, you have successfully installed XtalOpt.

*/

}
